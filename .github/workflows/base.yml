name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt','**/*.cpp','**/*.c','**/*.h','**/*.hpp') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Show tool versions
        run: |
          uname -a
          lsb_release -a || true
          cmake --version || true
          clang --version || true

      # 安装 Clang 20（使用 llvm.sh 脚本）
      - name: Install Clang 20
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-20 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-20 100
          sudo update-alternatives --set cc /usr/bin/clang-20
          sudo update-alternatives --set c++ /usr/bin/clang++-20

      # 安装系统依赖（包含 libboost 和 gtest 源）
      - name: Install deps via apt
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake pkg-config wget \
            libboost-all-dev libgtest-dev ccache

      # 编译并安装 GoogleTest（Ubuntu 的 libgtest-dev 只包含源）
      - name: Build and install GoogleTest
        run: |
          sudo apt-get install -y cmake || true
          tmpdir=$(mktemp -d)
          pushd "$tmpdir"
          cmake /usr/src/gtest -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -j$(nproc)
          sudo cp *.a /usr/lib || true
          popd
          rm -rf "$tmpdir"

      # 配置项目（启用 ccache 作为 compiler launcher）
      - name: Configure project
        env:
          CCACHE_DIR: $HOME/.ccache
        run: |
          cmake -B build \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_CXX_STANDARD=23 \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      # 构建项目
      - name: Build project
        run: cmake --build build -j$(nproc)

      # 运行测试
      - name: Run tests
        run: ctest --test-dir build --output-on-failure