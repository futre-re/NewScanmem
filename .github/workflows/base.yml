name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 安装 Clang 20
      - name: Install Clang 20
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-20 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-20 100
          sudo update-alternatives --set cc /usr/bin/clang-20
          sudo update-alternatives --set c++ /usr/bin/clang++-20

      # 安装 CMake 3.28
      - name: Install CMake 3.28
        run: |
          sudo apt-get remove --purge --yes cmake
          wget https://github.com/Kitware/CMake/releases/download/v3.28.0/cmake-3.28.0-linux-x86_64.sh
          chmod +x cmake-3.28.0-linux-x86_64.sh
          sudo ./cmake-3.28.0-linux-x86_64.sh --skip-license --prefix=/usr/local

      # 编译并安装 Boost 1.89
      - name: Build and Install Boost 1.89
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.89.0/source/boost_1_89_0.tar.gz
          tar -xzf boost_1_89_0.tar.gz
          cd boost_1_89_0
          ./bootstrap.sh
          ./b2 install --prefix=/usr/local -j$(nproc)

      # 配置项目
      - name: Configure project
        run: cmake -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_STANDARD=23

      # 构建项目
      - name: Build project
        run: cmake --build build

      # 运行测试
      - name: Run tests
        run: ctest --test-dir build --output-on-failure